name: Create test snapshot on PR

on:
  pull_request:
    branches:
      - main

jobs:
  create_test_snapshot:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    env:
      PKR_VAR_image_tag: test-PR#${{ github.event.pull_request.number }}
      PKR_VAR_vultr_api_key: ${{ secrets.VULTR_API_KEY }}
      HCP_CLIENT_ID: ${{ secrets.HCP_CLIENT_ID }}
      HCP_CLIENT_SECRET: ${{ secrets.HCP_CLIENT_SECRET }}
      HCP_ORGANIZATION_ID: ${{ secrets.HCP_ORGANIZATION_ID }}
      HCP_PROJECT_ID: ${{ secrets.HCP_PROJECT_ID }}
      HCP_PKR_BUCKET: discord-bot-server
      HCP_PKR_CHANNEL: testing
      HCP_TF_API_TOKEN: ${{ secrets.HCP_TF_API_TOKEN }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Ansible using pip
        run: |
          pip install --upgrade pip
          pip install ansible

      - name: Set up Packer
        uses: hashicorp/setup-packer@v3

      - name: Packer Init
        run: |
          cd vultr
          packer init main.pkr.hcl

      - name: Packer Build
        id: packer_build
        run: |
          cd vultr
          packer_output=$(mktemp)
          packer build main.pkr.hcl | tee $packer_output
          version_fingerprint=$(grep -oP 'Tracking build on HCP Packer with fingerprint "\K[^"]+' $packer_output)
          if [[ -z "$version_fingerprint" ]]; then
            echo "Error: Unable to extract version fingerprint"
            exit 1
          else
            echo "version_fingerprint=$version_fingerprint" >> $GITHUB_OUTPUT
          fi

      - name: Fetch Access Token
        id: fetch_access_token
        run: |
          response=$(curl --silent --location "https://auth.idp.hashicorp.com/oauth2/token" \
            --header "Content-Type: application/x-www-form-urlencoded" \
            --data-urlencode "client_id=$HCP_CLIENT_ID" \
            --data-urlencode "client_secret=$HCP_CLIENT_SECRET" \
            --data-urlencode "grant_type=client_credentials" \
            --data-urlencode "audience=https://api.hashicorp.cloud")
          hcp_access_token=$(echo $response | jq -r '.access_token')
          if [[ -z "$hcp_access_token" ]]; then
            echo "Error: Unable to extract access token"
            exit 1
          else
            echo "hcp_access_token=$hcp_access_token" >> $GITHUB_OUTPUT
          fi

      - name: Update Assigned Version of Development Channel
        run: |
          curl --location -X PATCH "https://api.cloud.hashicorp.com/packer/2023-01-01/organizations/$HCP_ORGANIZATION_ID/projects/$HCP_PROJECT_ID/buckets/$HCP_PKR_BUCKET/channels/$HCP_PKR_CHANNEL" \
            --header "Authorization: Bearer ${{ steps.fetch_access_token.outputs.hcp_access_token }}" \
            --header "Content-Type: application/json" \
            --data '{
              "version_fingerprint": "'"${{ steps.packer_build.outputs.version_fingerprint }}"'",
              "update_mask": "versionFingerprint"
            }'

      - name: Get workspace ID by name
        id: get_workspace_id
        run: |
          workspace_id=$(curl -s -X GET \
            --header "Authorization: Bearer $HCP_TF_API_TOKEN" \
            --header "Content-Type: application/vnd.api+json" \
            "https://app.terraform.io/api/v2/organizations/madcow234/workspaces?search%5Bname%5D=discord-bot-server-image-testing" | jq -r '.data[0].id')
          if [[ -z "$workspace_id" ]]; then
            echo "Error: Unable to retrieve workspace ID"
            exit 1
          else
            echo "workspace_id=$workspace_id" >> $GITHUB_OUTPUT
          fi

      - name: Trigger HCP Terraform run
        run: |
          curl -X POST \
            --header "Authorization: Bearer $HCP_TF_API_TOKEN" \
            --header "Content-Type: application/vnd.api+json" \
            https://app.terraform.io/api/v2/runs \
            -d '{
              "data": {
                "attributes": {
                  "is-destroy": false,
                  "auto-apply": true
                },
                "type": "runs",
                "relationships": {
                  "workspace": {
                    "data": {
                      "type": "workspaces",
                      "id": "'"${{ steps.get_workspace_id.outputs.workspace_id }}"'"
                    }
                  }
                }
              }
            }'
          if [[ $? -ne 0 ]]; then
            echo "Error: Unable to trigger workspace run"
            exit 1
          fi